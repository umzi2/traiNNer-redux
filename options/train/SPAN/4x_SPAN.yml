# general settings
name: 4x_SPAN
model_type: RealESRGANModel
scale: 4
num_gpu: auto
manual_seed: 1024

# USM the ground-truth #if these are true, it will apply an unsharp mask to the HR images, causing halos on the output
l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False

high_order_degradation: False

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: "/media/umzi/H/датасеты/3ch_1x/hh7/hq"
    dataroot_lq: "/media/umzi/H/датасеты/3ch_1x/hh7/lq"
    #meta_info: # Example: 'C:\Users\Me\ESRGAN\Nomos8k\meta.txt'
    io_backend:
      type: disk

    gt_size: 128 #during training, it will crop a square of this size from your images, larger is usually better but uses more vram
    use_hflip: true #randomly flip the images horizontally
    use_rot: true #randomly rotate the images

    # data loader
    num_worker_per_gpu: 4
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
  val:
    name: val
    type: SingleImageDataset
    dataroot_lq: /media/umzi/H/lq3
    io_backend:
      type: disk
val:
  val_freq: 1000
  save_img: true
# network structures
network_g:
  type: span
  num_in_ch: 3
  num_out_ch: 3
  feature_channels: 48
  upscale: 4


network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
#  pretrain_network_g: ~
  param_key_g: params
#  strict_load_g: true
#  resume_state: ~

# training settings
train:
#  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 3e-4
      #paper uses this:
      #lr: !!float 5e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: AdamW
    lr: !!float 1e-4
      #paper uses this:
      #lr: !!float 5e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [60000, 120000]
    gamma: 0.5

  total_iter: 60000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    perceptual_weight: 1.0
    criterion: l1
  color_opt:
    type: colorloss
    criterion: "l1"
    loss_weight: 1.0
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
